@using Newtonsoft.Json;
@model IEnumerable<web.Models.Question>

@{
    ViewData["Title"] = "Index";
}

@{
    var list = Model;
    var item = list.First();
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Test </title>
    <link rel="stylesheet" type="text/css" href="~/css/style.css">
</head>


<body>
    <div>
        <div id="header">
            <h2>EOS</h2>
            <h2>Student Name :</h2>
            <h2>Course </h2>
        </div>
        <div id="content">
            <div class="content_head">
                <h2 class="blue">There are 40 questions and your progress of answering is</h2>
                <div class="progress-container">
                    <div class="progress-bar">50%</div>
                </div>
            </div>

            <div class="content_body">

                <h1 class="blue">Question</h1>
                <p>(Choose<span id="numberAnswers"></span> answer)</p>
                <p id="questionContent"></p>
                <div id="checkboxList"></div>
                <div class="btn-container">
                    <button class="btn btn-primary" id="backButton" disabled>Back</button>
                    <button class="btn btn-primary" id="nextButton">Next</button>
                </div>
            </div>
        </div>
    </div>
</body>
<script src="~/js/testing_site.js"></script>
<script>

    // var checkboxList = document.getElementById('checkboxList');
    // var numberAnswers = document.getElementById('numberAnswers');
    // var questionContent = document.getElementById('questionContent');
    // var backButton = document.getElementById('backButton');
    // var nextButton = document.getElementById('nextButton');

    // var questions = @Html.Raw(JsonConvert.SerializeObject(Model));
    // var currentIndex = 0;

    // function updateQuestion() {
    //     var currentQuestion = questions[currentIndex];
    //     numberAnswers.textContent = currentQuestion.numberRightAnswer;
    //     questionContent.textContent = currentQuestion.Content;
    //     while (checkboxList.firstChild) checkboxList.removeChild(checkboxList.firstChild);
    //     currentQuestion.listAnswer.forEach(item => {
    //         var checkbox = document.createElement('input');
    //         checkbox.type = 'checkbox';
    //         checkbox.id = item.Content;
    //         checkbox.checked = item.Ticked;
    //         checkbox.onchange = function (event) {
    //             item.Ticked = event.target.checked;
    //         };
    //         checkbox.name = item.Content;
    //         var label = document.createElement('label');
    //         label.htmlFor = item.Content;
    //         label.appendChild(document.createTextNode(item.Content));
    //         checkboxList.appendChild(checkbox);
    //         checkboxList.appendChild(label);
    //         checkboxList.appendChild(document.createElement('br'));
    //     });
    // }

    // function checkClicked(event, item) {
    //     console.log(event.target.checked, item);
    // }

    // function handleBackButtonClick() {
    //     if (currentIndex > 0) {
    //         currentIndex--;
    //         updateQuestion();
    //         nextButton.disabled = false;
    //     }
    //     if (currentIndex === 0) {
    //         backButton.disabled = true;
    //     }
    // }

    // function handleNextButtonClick() {
    //     if (currentIndex < questions.length - 1) {
    //         currentIndex++;
    //         updateQuestion();
    //         backButton.disabled = false;
    //     }
    //     if (currentIndex === questions.length - 1) {
    //         nextButton.disabled = true;
    //     }
    // }

    // updateQuestion();

    // backButton.addEventListener('click', handleBackButtonClick);
    // nextButton.addEventListener('click', handleNextButtonClick);

</script>


<script src="https://cdnjs.cloudflare.com/ajax/libs/json2/20210302/json2.min.js"></script>

</html>




